<testset xmlns="http://cpee.org/ns/properties/2.0">
  <executionhandler>ruby</executionhandler>
  <dataelements/>
  <endpoints>
    <user>https-post://cpee.org/services/timeout-user.php</user>
    <auto>https-post://cpee.org/services/timeout-auto.php</auto>
    <subprocess>https-post://cpee.org/flow/start/url/</subprocess>
    <timeout>https://cpee.org/services/timeout.php</timeout>
    <send>https-post://cpee.org/ing/correlators/message/send/</send>
    <receive>https-get://cpee.org/ing/correlators/message/receive/</receive>
    <flask>https://lehre.bpm.in.tum.de/ports/24206/</flask>
  </endpoints>
  <attributes>
    <info>nn</info>
    <modeltype>CPEE</modeltype>
    <theme>preset</theme>
  </attributes>
  <description>
    <description xmlns="http://cpee.org/ns/description/1.0">
      <loop mode="post_test" condition="data.machineRestart == &quot;yes&quot;">
        <_probability>
          <_probability_min/>
          <_probability_max/>
          <_probability_avg/>
        </_probability>
        <call id="a1" endpoint="flask">
          <parameters>
            <label>Wait until Machine is Successfully Started / Restarted</label>
            <method>:post</method>
            <arguments/>
          </parameters>
          <annotations>
            <_generic/>
            <_timing>
              <_timing_weight/>
              <_timing_avg/>
              <explanations/>
            </_timing>
            <_shifting>
              <_shifting_type>Duration</_shifting_type>
            </_shifting>
            <_context_data_analysis>
              <probes/>
              <ips/>
            </_context_data_analysis>
            <report>
              <url/>
            </report>
            <_notes>
              <_notes_general/>
            </_notes>
          </annotations>
          <documentation>
            <input/>
            <output/>
            <implementation>
              <description/>
            </implementation>
            <code>
              <description/>
            </code>
          </documentation>
          <code>
            <prepare/>
            <finalize output="result"/>
            <update output="result"/>
            <rescue output="result"/>
          </code>
        </call>
        <call id="a2" endpoint="flask">
          <parameters>
            <label>Start Machine Monitoring Software</label>
            <method>:post</method>
            <arguments/>
          </parameters>
          <code>
            <prepare/>
            <finalize output="result"/>
            <update output="result"/>
            <rescue output="result"/>
          </code>
          <annotations>
            <_generic/>
            <_timing>
              <_timing_weight/>
              <_timing_avg/>
              <explanations/>
            </_timing>
            <_shifting>
              <_shifting_type>Duration</_shifting_type>
            </_shifting>
            <_context_data_analysis>
              <probes/>
              <ips/>
            </_context_data_analysis>
            <report>
              <url/>
            </report>
            <_notes>
              <_notes_general/>
            </_notes>
          </annotations>
          <documentation>
            <input/>
            <output/>
            <implementation>
              <description/>
            </implementation>
            <code>
              <description/>
            </code>
          </documentation>
        </call>
        <call id="a15" endpoint="flask">
          <parameters>
            <label>Define OEE Threshold</label>
            <method>:post</method>
            <arguments>
              <Value>Input a number</Value>
            </arguments>
          </parameters>
          <code>
            <prepare/>
            <finalize output="result">result=result.to_h
data.oeeThres = result["value"]</finalize>
            <update output="result"/>
            <rescue output="result"/>
          </code>
          <annotations>
            <_generic/>
            <_timing>
              <_timing_weight/>
              <_timing_avg/>
              <explanations/>
            </_timing>
            <_shifting>
              <_shifting_type>Duration</_shifting_type>
            </_shifting>
            <_context_data_analysis>
              <probes/>
              <ips/>
            </_context_data_analysis>
            <report>
              <url/>
            </report>
            <_notes>
              <_notes_general/>
            </_notes>
          </annotations>
          <documentation>
            <input/>
            <output/>
            <implementation>
              <description/>
            </implementation>
            <code>
              <description/>
            </code>
          </documentation>
        </call>
        <loop mode="post_test" condition="data.oeeThres &lt; data.oee">
          <_probability>
            <_probability_min/>
            <_probability_max/>
            <_probability_avg/>
          </_probability>
          <call id="a4" endpoint="flask">
            <parameters>
              <label>Check if Software has Connection to Machine</label>
              <method>:post</method>
              <arguments>
                <Value>Input "yes" if Software as Connection else "no"</Value>
              </arguments>
            </parameters>
            <code>
              <prepare/>
              <finalize output="result">result=result.to_h
data.connected = result["value"];</finalize>
              <update output="result"/>
              <rescue output="result"/>
            </code>
            <annotations>
              <_generic/>
              <_timing>
                <_timing_weight/>
                <_timing_avg/>
                <explanations/>
              </_timing>
              <_shifting>
                <_shifting_type>Duration</_shifting_type>
              </_shifting>
              <_context_data_analysis>
                <probes/>
                <ips/>
              </_context_data_analysis>
              <report>
                <url/>
              </report>
              <_notes>
                <_notes_general/>
              </_notes>
            </annotations>
            <documentation>
              <input/>
              <output/>
              <implementation>
                <description/>
              </implementation>
              <code>
                <description/>
              </code>
            </documentation>
          </call>
          <choose mode="exclusive">
            <alternative condition="data.connected == &quot;yes&quot;">
              <_probability>
                <_probability_min/>
                <_probability_max/>
                <_probability_avg/>
              </_probability>
              <parallel wait="-1" cancel="last">
                <parallel_branch>
                  <call id="a8" endpoint="flask">
                    <parameters>
                      <label>Collect Machine Quality Data</label>
                      <method>:post</method>
                      <arguments>
                        <Value>Input a number </Value>
                      </arguments>
                    </parameters>
                    <code>
                      <prepare/>
                      <finalize output="result">result=result.to_h
data.quality = result["value"]</finalize>
                      <update output="result"/>
                      <rescue output="result"/>
                    </code>
                    <annotations>
                      <_generic/>
                      <_timing>
                        <_timing_weight/>
                        <_timing_avg/>
                        <explanations/>
                      </_timing>
                      <_shifting>
                        <_shifting_type>Duration</_shifting_type>
                      </_shifting>
                      <_context_data_analysis>
                        <probes/>
                        <ips/>
                      </_context_data_analysis>
                      <report>
                        <url/>
                      </report>
                      <_notes>
                        <_notes_general/>
                      </_notes>
                    </annotations>
                    <documentation>
                      <input/>
                      <output/>
                      <implementation>
                        <description/>
                      </implementation>
                      <code>
                        <description/>
                      </code>
                    </documentation>
                  </call>
                </parallel_branch>
                <parallel_branch pass="" local="">
                  <call id="a6" endpoint="flask">
                    <parameters>
                      <label>Collect Machine Availability Data</label>
                      <method>:post</method>
                      <arguments>
                        <Value>Input a number</Value>
                      </arguments>
                    </parameters>
                    <code>
                      <prepare/>
                      <finalize output="result">result=result.to_h
data.availability = result["value"]</finalize>
                      <update output="result"/>
                      <rescue output="result"/>
                    </code>
                    <annotations>
                      <_generic/>
                      <_timing>
                        <_timing_weight/>
                        <_timing_avg/>
                        <explanations/>
                      </_timing>
                      <_shifting>
                        <_shifting_type>Duration</_shifting_type>
                      </_shifting>
                      <_context_data_analysis>
                        <probes/>
                        <ips/>
                      </_context_data_analysis>
                      <report>
                        <url/>
                      </report>
                      <_notes>
                        <_notes_general/>
                      </_notes>
                    </annotations>
                    <documentation>
                      <input/>
                      <output/>
                      <implementation>
                        <description/>
                      </implementation>
                      <code>
                        <description/>
                      </code>
                    </documentation>
                  </call>
                </parallel_branch>
                <parallel_branch pass="" local="">
                  <call id="a7" endpoint="flask">
                    <parameters>
                      <label>Collect Machine Performance Data</label>
                      <method>:post</method>
                      <arguments>
                        <Value>Input a number</Value>
                      </arguments>
                    </parameters>
                    <code>
                      <prepare/>
                      <finalize output="result">result=result.to_h
data.performance = result["value"]</finalize>
                      <update output="result"/>
                      <rescue output="result"/>
                    </code>
                    <annotations>
                      <_generic/>
                      <_timing>
                        <_timing_weight/>
                        <_timing_avg/>
                        <explanations/>
                      </_timing>
                      <_shifting>
                        <_shifting_type>Duration</_shifting_type>
                      </_shifting>
                      <_context_data_analysis>
                        <probes/>
                        <ips/>
                      </_context_data_analysis>
                      <report>
                        <url/>
                      </report>
                      <_notes>
                        <_notes_general/>
                      </_notes>
                    </annotations>
                    <documentation>
                      <input/>
                      <output/>
                      <implementation>
                        <description/>
                      </implementation>
                      <code>
                        <description/>
                      </code>
                    </documentation>
                  </call>
                </parallel_branch>
              </parallel>
              <call id="a9" endpoint="auto">
                <parameters>
                  <label>Calculate OEE out of Collected Data</label>
                  <arguments>
                    <timeout>2</timeout>
                  </arguments>
                </parameters>
                <code>
                  <prepare/>
                  <finalize output="result">result=result.to_h
data.oee = data.availability * data.quality * data.performance</finalize>
                  <update output="result"/>
                  <rescue output="result"/>
                </code>
                <annotations>
                  <_generic/>
                  <_timing>
                    <_timing_weight/>
                    <_timing_avg/>
                    <explanations/>
                  </_timing>
                  <_shifting>
                    <_shifting_type>Duration</_shifting_type>
                  </_shifting>
                  <_context_data_analysis>
                    <probes/>
                    <ips/>
                  </_context_data_analysis>
                  <report>
                    <url/>
                  </report>
                  <_notes>
                    <_notes_general/>
                  </_notes>
                </annotations>
                <documentation>
                  <input/>
                  <output/>
                  <implementation>
                    <description/>
                  </implementation>
                  <code>
                    <description/>
                  </code>
                </documentation>
              </call>
            </alternative>
            <otherwise/>
          </choose>
        </loop>
        <call id="a5" endpoint="auto">
          <parameters>
            <label>Show OEE or Disconnection Warning to User</label>
            <arguments>
              <timeout>2</timeout>
            </arguments>
          </parameters>
          <code>
            <prepare/>
            <finalize output="result"/>
            <update output="result"/>
            <rescue output="result"/>
          </code>
          <annotations>
            <_generic/>
            <_timing>
              <_timing_weight/>
              <_timing_avg/>
              <explanations/>
            </_timing>
            <_shifting>
              <_shifting_type>Duration</_shifting_type>
            </_shifting>
            <_context_data_analysis>
              <probes/>
              <ips/>
            </_context_data_analysis>
            <report>
              <url/>
            </report>
            <_notes>
              <_notes_general/>
            </_notes>
          </annotations>
          <documentation>
            <input/>
            <output/>
            <implementation>
              <description/>
            </implementation>
            <code>
              <description/>
            </code>
          </documentation>
        </call>
        <call id="a11" endpoint="flask">
          <parameters>
            <label>Stop Machine Monitoring Software</label>
            <method>:post</method>
            <arguments/>
          </parameters>
          <code>
            <prepare/>
            <finalize output="result"/>
            <update output="result"/>
            <rescue output="result"/>
          </code>
          <annotations>
            <_generic/>
            <_timing>
              <_timing_weight/>
              <_timing_avg/>
              <explanations/>
            </_timing>
            <_shifting>
              <_shifting_type>Duration</_shifting_type>
            </_shifting>
            <_context_data_analysis>
              <probes/>
              <ips/>
            </_context_data_analysis>
            <report>
              <url/>
            </report>
            <_notes>
              <_notes_general/>
            </_notes>
          </annotations>
          <documentation>
            <input/>
            <output/>
            <implementation>
              <description/>
            </implementation>
            <code>
              <description/>
            </code>
          </documentation>
        </call>
        <call id="a10" endpoint="flask">
          <parameters>
            <label>Stop Machine</label>
            <method>:post</method>
            <arguments/>
          </parameters>
          <code>
            <prepare/>
            <finalize output="result"/>
            <update output="result"/>
            <rescue output="result"/>
          </code>
          <annotations>
            <_generic/>
            <_timing>
              <_timing_weight/>
              <_timing_avg/>
              <explanations/>
            </_timing>
            <_shifting>
              <_shifting_type>Duration</_shifting_type>
            </_shifting>
            <_context_data_analysis>
              <probes/>
              <ips/>
            </_context_data_analysis>
            <report>
              <url/>
            </report>
            <_notes>
              <_notes_general/>
            </_notes>
          </annotations>
          <documentation>
            <input/>
            <output/>
            <implementation>
              <description/>
            </implementation>
            <code>
              <description/>
            </code>
          </documentation>
        </call>
        <choose mode="exclusive">
          <alternative condition="data.connected == &quot;yes&quot;">
            <_probability>
              <_probability_min/>
              <_probability_max/>
              <_probability_avg/>
            </_probability>
            <call id="a3" endpoint="flask">
              <parameters>
                <label>Send Email about the "underperformance" to Engineer</label>
                <method>:post</method>
                <arguments/>
              </parameters>
              <annotations>
                <_generic/>
                <_timing>
                  <_timing_weight/>
                  <_timing_avg/>
                  <explanations/>
                </_timing>
                <_shifting>
                  <_shifting_type>Duration</_shifting_type>
                </_shifting>
                <_context_data_analysis>
                  <probes/>
                  <ips/>
                </_context_data_analysis>
                <report>
                  <url/>
                </report>
                <_notes>
                  <_notes_general/>
                </_notes>
              </annotations>
              <documentation>
                <input/>
                <output/>
                <implementation>
                  <description/>
                </implementation>
                <code>
                  <description/>
                </code>
              </documentation>
            </call>
            <call id="a13" endpoint="flask">
              <parameters>
                <label>Wait for Email Response from Engineer</label>
                <method>:post</method>
                <arguments/>
              </parameters>
              <annotations>
                <_generic/>
                <_timing>
                  <_timing_weight/>
                  <_timing_avg/>
                  <explanations/>
                </_timing>
                <_shifting>
                  <_shifting_type>Duration</_shifting_type>
                </_shifting>
                <_context_data_analysis>
                  <probes/>
                  <ips/>
                </_context_data_analysis>
                <report>
                  <url/>
                </report>
                <_notes>
                  <_notes_general/>
                </_notes>
              </annotations>
              <documentation>
                <input/>
                <output/>
                <implementation>
                  <description/>
                </implementation>
                <code>
                  <description/>
                </code>
              </documentation>
            </call>
            <call id="a14" endpoint="flask">
              <parameters>
                <label>Set "will Machine be Restarted" according to Email response</label>
                <method>:post</method>
                <arguments>
                  <Value>Info: Enter "yes" if machiine will be restarted else "no"</Value>
                </arguments>
              </parameters>
              <code>
                <prepare/>
                <finalize output="result">result=result.to_h
data.machineRestart = result["value"]</finalize>
                <update output="result"/>
                <rescue output="result"/>
              </code>
              <annotations>
                <_generic/>
                <_timing>
                  <_timing_weight/>
                  <_timing_avg/>
                  <explanations/>
                </_timing>
                <_shifting>
                  <_shifting_type>Duration</_shifting_type>
                </_shifting>
                <_context_data_analysis>
                  <probes/>
                  <ips/>
                </_context_data_analysis>
                <report>
                  <url/>
                </report>
                <_notes>
                  <_notes_general/>
                </_notes>
              </annotations>
              <documentation>
                <input/>
                <output/>
                <implementation>
                  <description/>
                </implementation>
                <code>
                  <description/>
                </code>
              </documentation>
            </call>
          </alternative>
          <otherwise>
            <call id="a12" endpoint="auto">
              <parameters>
                <label>Set Machine will not be Restarted</label>
                <arguments>
                  <timeout>2</timeout>
                </arguments>
              </parameters>
              <code>
                <prepare/>
                <finalize output="result">result=result.to_h
data.machineRestart = "no"</finalize>
                <update output="result"/>
                <rescue output="result"/>
              </code>
              <annotations>
                <_generic/>
                <_timing>
                  <_timing_weight/>
                  <_timing_avg/>
                  <explanations/>
                </_timing>
                <_shifting>
                  <_shifting_type>Duration</_shifting_type>
                </_shifting>
                <_context_data_analysis>
                  <probes/>
                  <ips/>
                </_context_data_analysis>
                <report>
                  <url/>
                </report>
                <_notes>
                  <_notes_general/>
                </_notes>
              </annotations>
              <documentation>
                <input/>
                <output/>
                <implementation>
                  <description/>
                </implementation>
                <code>
                  <description/>
                </code>
              </documentation>
            </call>
          </otherwise>
        </choose>
      </loop>
    </description>
  </description>
  <transformation>
    <description type="copy"/>
    <dataelements type="none"/>
    <endpoints type="none"/>
  </transformation>
  <subscriptions xmlns="http://riddl.org/ns/common-patterns/notifications-producer/2.0">
    <subscription xmlns="http://riddl.org/ns/common-patterns/notifications-producer/2.0" id="_student" url="https://lehre.bpm.in.tum.de/ports/24209/log">
      <topic id="activity">
        <event>calling</event>
        <event>status</event>
        <event>receiving</event>
        <event>failed</event>
        <event>manipulating</event>
        <event>done</event>
      </topic>
      <topic id="state">
        <event>change</event>
      </topic>
    </subscription>
  </subscriptions>
</testset>